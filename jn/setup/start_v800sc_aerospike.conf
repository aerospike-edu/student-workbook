# Aerospike database configuration file.

service {
  user root
  group root
  pidfile /var/run/aerospike/asd.pid
  service-threads 4
  proto-fd-max 15000
  node-id A1
  cluster-name training
#  microsecond-histograms true  #static, millisecond default
}

logging {
  # Log file must be an absolute path.
  file /var/log/aerospike/aerospike.log {
  context any critical
  }
}

network {
  service {
    address any
    port 3000
  }

  heartbeat {
    mode mesh
    port 3002
    address any

    # To form a cluster, add Private IP of a node on AWS
    # You can add multiple entries for mesh-seed-address-port
    # mesh-seed-address-port 172.xx.yy.zz 3002

    interval 150
    timeout 10
  }

  fabric {
    port 3001
  }

# Not setting info sub-context sets disables this telnet port
#  info {
#    port 3003
#  }

}

#Note - space before { bracket. Important to have the space.

namespace test {
  replication-factor 1
  strong-consistency true
  stop-writes-sys-memory-pct 90
  default-ttl 0 # 5 days, use 0 to never expire/evict.
  nsup-period 0 
  index-stage-size 128M # default is 1GB, t2.micro instance on AWS is 1GB total RAM.
  sindex-stage-size 128M # default is 1GB, t2.micro instance on AWS is 1GB total RAM.

  # To use file storage backing, comment out the line above and use the
  # following lines instead.
  storage-engine device {
    stop-writes-avail-pct 5
    evict-used-pct 0
    file /opt/aerospike/data/test.dat
    filesize 256M  # server needs 8 blocks of 8M to get started. rest is test data. 
    # Since we have tiny storage, set p-w-c to 1 block or 8M, so we can run our tests.
    post-write-cache 8M # Blocks in post-write-cache cannot be defragged. Keeping it at 1 block.
  }
}


# namespace bar {
#   replication-factor 1
#   strong-consistency true
#   stop-writes-sys-memory-pct 90
#   default-ttl 0 # 5 days, use 0 to never expire/evict.
#   nsup-period 0
#   index-stage-size 128M # default is 1GB, t2.micro instance on AWS is 1GB total RAM.
#   sindex-stage-size 128M # default is 1GB, t2.micro instance on AWS is 1GB total RAM.
# 
#   # To use file storage backing, comment out the line above and use the
#   # following lines instead.
#   storage-engine device {
#     stop-writes-avail-pct 5
#     evict-used-pct 0
#     file /opt/aerospike/data/bar.dat
#     filesize 256M  # server needs 8 blocks of 8M to get started. rest is test data. 
#     # Since we have tiny storage, set p-w-c to 1 block or 8M, so we can run our tests.
#     post-write-cache 8M # Blocks in post-write-cache cannot be defragged. Keeping it at 1 block.
#   }
# }
